# coding=utf-8
from __future__ import unicode_literals

"""
Django settings for proyecta project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'j0w&9$*ax!_s380kp+m8uuxa4w%7pz4wx&l797%$jwq=x8uz99'
HASHID_FIELD_SALT = '*b^p5@$i0&-uvfdte4($6x8g$$(3zpo+ax5^7%1=ji%&@0o=l)'

# SECURITY WARNING: don't run with debug turned on in production!


ALLOWED_HOSTS = ['*']


# Application definition


DJANGO_APPS = [
    # 'material.theme.lightblue',
    # 'material',
    # 'material.frontend',
    # 'material.admin',
    # 'jet.dashboard',
    # 'jet',
    # 'dal',
    # 'dal_select2',
    # 'flat_responsive',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
]

LOCAL_APPS = [
    'backend',
    'backend.budget',
    'backend.client',
    'backend.core',
    'backend.resource',
    'backend.dashboard',
]

THIRD_APPS = [
    # 'adminsortable2',
    # 'django_select2',
    # 'nested_admin',
    # 'tabbed_admin',
    # 'treebeard',
    'constance',  # Para guarda los settings a una base de datos
    'constance.backends.database',
    # 'django_admin_row_actions',
    'easy_thumbnails',
    'rest_framework',
    'reversion',
    'widget_tweaks',
    'django_filters',
    'webpack_loader'
]

INSTALLED_APPS = DJANGO_APPS + LOCAL_APPS + THIRD_APPS


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'django_session_timeout.middleware.SessionTimeoutMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'reversion.middleware.RevisionMiddleware',
    'backend.core.middleware.BaseMiddleware',
]

ROOT_URLCONF = 'proyecta.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'proyecta.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


AUTH_USER_MODEL = 'core.User'

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'es-pe'

TIME_ZONE = 'America/Lima'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = "/static/"

MEDIA_URL = "/media/"

STATIC_ROOT = os.path.join(BASE_DIR, "site_media", STATIC_URL.strip("/"))
MEDIA_ROOT = os.path.join(BASE_DIR, "site_media", MEDIA_URL.strip("/"))

LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"

# TABBED_ADMIN_USE_JQUERY_UI = True


ADMINS = (
    ('Carlos Maldonado', 'cmaldonado@moxdata.com'),
)

THUMBNAIL_ALIASES = {
    '': {
        'avatar': {'size': (50, 50), 'crop': True},
        'avatar2': {'size': (80, 80), 'crop': True},
        'miniature_50_0': {'size': (50, 0), 'crop': True, 'upscale': True},
        'small': {'size': (100, 100), 'crop': True},
        'medium': {'size': (250, 250), 'crop': True},
        'medium_h': {'size': (250, 100), 'crop': True},
        'large': {'size': (500, 500), 'crop': True},
    },
}

#############
# CONSTANCE
#############

CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'

CONSTANCE_CONFIG = {
    'DEFAULT_START_TIME': (datetime.time(7, 0), 'Hora de inicio de los trabajos'),
    'DEFAULT_FINISH_TIME': (datetime.time(19, 0), 'Hora de t√©rmino de los trabajos'),
}

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    # ]
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DATETIME_FORMAT': "%Y-%m-%dT%H:%M:%S.%fZ",
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',),
    'DEFAULT_PAGINATION_CLASS': 'backend.core.pagination.StandardResultsSetPagination'
}


# DATA_UPLOAD_MAX_NUMBER_FIELDS = None

#SESSION_EXPIRE_SECONDS = 90000  # 1 min

#SESSION_EXPIRE_AFTER_LAST_ACTIVITY = True

##################
# LOCAL SETTINGS #
##################

# Allow any settings to be defined in local.py which should be
# ignored in your version control system allowing for settings to be
# defined per machine.
try:
    from .local import *
except ImportError:
    pass

try:
    from .prod import *
except ImportError:
    pass


#####################
# Webpack
#####################

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': 'dist/',
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack-stats.json'),
    }
}


##################
# DEBUG SETTINGS #
##################

INTERNAL_IPS = ('127.0.0.1',)
if DEBUG:
    # DJANGO DEBUG TOOLBAR
    # try:
    #     import debug_toolbar
    # except ImportError:
    #     pass
    # else:
    #     INSTALLED_APPS += ('debug_toolbar', )
    #     MIDDLEWARE += ('debug_toolbar.middleware.DebugToolbarMiddleware', )

    try:
        import django_extensions
    except ImportError:
        pass
    else:
        INSTALLED_APPS += ('django_extensions', )
